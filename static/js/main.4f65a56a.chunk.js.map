{"version":3,"sources":["Components/User/User.js","Components/Todoitem/Todoitem.js","Components/Todolist/Todolist.js","App.js","index.js"],"names":["User","_ref","user","username","name","phone","website","address","react_default","a","createElement","className","city","Todoitem","todo","completed","id","title","Components_User_User","Todolist","todoList","sortByTitle","isLoaded","sortByUser","sortByCompleted","type","onClick","map","Components_Todoitem_Todoitem","key","USER_API","TODOS_API","App","state","todos","isLoading","hasError","getTodosWithUsers","_this","setState","Promise","all","fetch","then","responses","respons","json","_ref2","Object","slicedToArray","usersDate","todosDate","item","_objectSpread","find","userId","catch","prevState","sort","b","_this$state","this","Fragment","disabled","Components_Todolist_Todolist","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4f65a56a.chunk.js","sourcesContent":["import React from 'react';\nimport './User.css';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => {\n  const {\n    username, name, phone, website, address,\n  } = user;\n\n  return (\n    <div className=\"user\">\n      <p className=\"user__username\">\n        {username}\n      </p>\n      <p className=\"user__name\">\n        {name}\n      </p>\n      <p className=\"user__city\">\n        {address.city}\n      </p>\n      <p className=\"user__phone\">\n        {phone}\n      </p>\n      <p className=\"user__website\">\n        {website}\n      </p>\n    </div>\n  );\n};\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    username: PropTypes.string,\n    name: PropTypes.string,\n    address: PropTypes.shape({\n      city: PropTypes.string,\n    }),\n    phone: PropTypes.string,\n    website: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\nimport './Todoitem.css';\n\nconst Todoitem = ({ todo }) => {\n  const {\n    completed,\n    id,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <div className=\"todo-item\">\n      <p className=\"todo-item__id\">{id}</p>\n      <p className=\"todo-item__title\">{title}</p>\n      <User user={user} />\n      <p>\n        {completed\n          ? ' \\u2714'\n          : ' \\u2716'}\n      </p>\n    </div>\n  );\n};\n\nTodoitem.propTypes = {\n  todo: PropTypes.shape({\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    user: PropTypes.object,\n  }).isRequired,\n};\n\nexport default Todoitem;\n","import React from 'react';\nimport './Todolist.css';\nimport PropTypes from 'prop-types';\nimport Todoitem from '../Todoitem/Todoitem';\n\nconst Todolist = ({\n  todoList,\n  sortByTitle,\n  isLoaded,\n  sortByUser,\n  sortByCompleted,\n}) => (\n  <div>\n    {isLoaded && (\n      <div className=\"buttons-sort\">\n        <button\n          type=\"button\"\n          onClick={() => sortByTitle(todoList)}\n        >\n        Sort by title\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => sortByUser(todoList)}\n        >\n        Sort by Name\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => sortByCompleted(todoList)}\n        >\n        Completed\n        </button>\n      </div>\n    )}\n    <div className=\"todo-list\">\n      {todoList.map(todo => <Todoitem key={todo.id} todo={todo} />)}\n    </div>\n  </div>\n);\n\nTodolist.propTypes = {\n  sortByTitle: PropTypes.func,\n  todoList: PropTypes.arrayOf(PropTypes.shape({\n    userid: PropTypes.number,\n    id: PropTypes.number,\n    tittle: PropTypes.string,\n    complated: PropTypes.bool,\n  })),\n}.isRequired;\n\nexport default Todolist;\n","import React from 'react';\nimport './App.css';\nimport Todolist from './Components/Todolist/Todolist';\n\nconst USER_API = 'https://jsonplaceholder.typicode.com/users';\nconst TODOS_API = 'https://jsonplaceholder.typicode.com/todos';\nclass App extends React.Component {\n  state = {\n    todos: [],\n    isLoading: false,\n    hasError: false,\n    isLoaded: false,\n  };\n\n  getTodosWithUsers = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    Promise.all([fetch(USER_API), fetch(TODOS_API)])\n      .then(responses => Promise.all(responses.map(respons => respons.json())))\n      .then(([usersDate, todosDate]) => this.setState({\n        todos: todosDate.map(item => (\n          {\n            ...item,\n            user: usersDate.find(user => user.id === item.userId),\n          }\n        )),\n        isLoading: false,\n        hasError: false,\n        isLoaded: true,\n      }))\n      .catch(() => this.setState({\n        hasError: true,\n        isLoading: false,\n      }));\n  }\n\n  sortByTitle = todos => (\n    this.setState(prevState => ({\n      todos: prevState.todos.sort((a, b) => (a.title > b.title ? 1 : -1)),\n    }))\n  );\n\n  sortByUser = todos => (\n    this.setState(prevState => ({\n      todos: prevState.todos.sort((a, b) => (a.user.name > b.user.name\n        ? 1\n        : -1)),\n    }))\n  );\n\n  sortByCompleted = todos => (\n    this.setState(prevState => ({\n      todos: prevState.todos.sort((a, b) => (a.completed > b.completed\n        ? -1\n        : 1)),\n    }))\n  );\n\n  render() {\n    const {\n      todos,\n      isLoading,\n      hasError,\n      isLoaded,\n    } = this.state;\n\n    if (hasError) {\n      return (\n        <>\n          <p>Conection problem</p>\n          <button\n            type=\"button\"\n            className=\"button-load\"\n            onClick={this.getTodosWithUsers}\n            disabled={isLoading}\n          >\n            {isLoading\n              ? 'Loading...'\n              : 'Load'}\n          </button>\n        </>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of todos</h1>\n        <Todolist\n          todoList={todos}\n          isLoaded={isLoaded}\n          sortByTitle={this.sortByTitle}\n          sortByUser={this.sortByUser}\n          sortByCompleted={this.sortByCompleted}\n        />\n        {!isLoaded && (\n          <button\n            type=\"button\"\n            className=\"button-load\"\n            onClick={this.getTodosWithUsers}\n            disabled={isLoading}\n          >\n            {isLoading\n              ? 'Loading...'\n              : 'Load'}\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}